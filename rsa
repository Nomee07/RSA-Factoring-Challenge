#!/usr/bin/python3
import sys

def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def pollards_rho(n):
    def f(x):
        return (x**2 + 1) % n

    x, y, d = 2, 2, 1
    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x - y), n)

    if d == n:
        return None
    return d

def factorize(number):
    if number == 1:
        return [1]
    factors = []
    divisor = pollards_rho(number)
    if divisor is None:
        return [number]
    else:
        factors.extend(factorize(divisor))
        factors.extend(factorize(number // divisor))
    return factors

def fc():
    try:
        revfile = sys.argv[1]
        with open(revfile) as f:
            for revnumber in f:
                revnumber = int(revnumber.strip())
                factors = factorize(revnumber)
                print("{}={}*{}".format(revnumber, factors[0], factors[1]))
    except (IndexError, FileNotFoundError):
        pass

if __name__ == "__main__":
    fc()
